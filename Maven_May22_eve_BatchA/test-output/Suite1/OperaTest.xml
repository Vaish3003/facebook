<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-G61E0GK" failures="0" tests="3" name="OperaTest" time="0.362" errors="0" timestamp="2022-09-18T23:01:20 GMT-07:00">
  <testcase classname="test.TestNgClass" name="@BeforeTest launchBrowser" time="0.261">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: cannot find Opera binary
  (Driver info: operadriver=105.0.5195.102 (4c16f5ffcc2da70ee2600d5db77bed423ac03a5a-refs/branch-heads/5195_55@{#4}),platform=Windows NT 10.0.19044 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 25 milliseconds
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:17:03&amp;apos;
System info: host: &amp;apos;DESKTOP-G61E0GK&amp;apos;, ip: &amp;apos;192.168.0.106&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;18.0.1.1&amp;apos;
Driver info: driver.version: OperaDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: cannot find Opera binary
  (Driver info: operadriver=105.0.5195.102 (4c16f5ffcc2da70ee2600d5db77bed423ac03a5a-refs/branch-heads/5195_55@{#4}),platform=Windows NT 10.0.19044 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 25 milliseconds
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-G61E0GK', ip: '192.168.0.106', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '18.0.1.1'
Driver info: driver.version: OperaDriver
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.JsonWireProtocolResponse.lambda$errorHandler$0(JsonWireProtocolResponse.java:54)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:1002)
at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)
at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.opera.OperaDriver.<init>(OperaDriver.java:173)
at org.openqa.selenium.opera.OperaDriver.<init>(OperaDriver.java:160)
at org.openqa.selenium.opera.OperaDriver.<init>(OperaDriver.java:115)
at test.TestNgClass.launchBrowser(TestNgClass.java:42)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest launchBrowser -->
  <testcase classname="testA.TestNgClass" name="@BeforeTest launchBrowser" time="-1.663567280219E9">
    <skipped/>
  </testcase> <!-- @BeforeTest launchBrowser -->
  <testcase classname="test.TestNgClass" name="@BeforeClass createPOMObject" time="-1.663567280223E9">
    <skipped/>
  </testcase> <!-- @BeforeClass createPOMObject -->
  <testcase classname="test.TestNgClass" name="@BeforeMethod openApplication" time="-1.663567280226E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod openApplication -->
  <testcase classname="test.TestNgClass" name="@AfterMethod logoutFromApplication" time="-1.663567280239E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logoutFromApplication -->
  <testcase classname="test.TestNgClass" name="@BeforeMethod openApplication" time="-1.663567280247E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod openApplication -->
  <testcase classname="test.TestNgClass" name="@AfterMethod logoutFromApplication" time="-1.663567280257E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logoutFromApplication -->
  <testcase classname="test.TestNgClass" name="@AfterClass cleanPOMObject" time="-1.663567280261E9">
    <skipped/>
  </testcase> <!-- @AfterClass cleanPOMObject -->
  <testcase classname="testA.TestNgClass" name="@BeforeClass createPOMObject" time="-1.663567280268E9">
    <skipped/>
  </testcase> <!-- @BeforeClass createPOMObject -->
  <testcase classname="testA.TestNgClass" name="@BeforeMethod beforeMethod" time="-1.663567280271E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="testA.TestNgClass" name="@AfterMethod logoutFromapplication" time="-1.663567280283E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logoutFromapplication -->
  <testcase classname="testA.TestNgClass" name="@AfterClass cleanPOMObject" time="-1.663567280289E9">
    <skipped/>
  </testcase> <!-- @AfterClass cleanPOMObject -->
  <testcase classname="test.TestNgClass" name="@AfterTest cleanBrowser" time="-1.663567280293E9">
    <skipped/>
  </testcase> <!-- @AfterTest cleanBrowser -->
  <testcase classname="testA.TestNgClass" name="@AfterTest cleanBrowser" time="-1.663567280305E9">
    <skipped/>
  </testcase> <!-- @AfterTest cleanBrowser -->
  <testcase classname="test.TestNgClass" name="goBackToMessenger" time="0.0">
    <skipped/>
  </testcase> <!-- goBackToMessenger -->
  <testcase classname="test.TestNgClass" name="contactToHelpCenter" time="0.0">
    <skipped/>
  </testcase> <!-- contactToHelpCenter -->
  <testcase classname="testA.TestNgClass" name="test1" time="0.0">
    <skipped/>
  </testcase> <!-- test1 -->
</testsuite> <!-- OperaTest -->
